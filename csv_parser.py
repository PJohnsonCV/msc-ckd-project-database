# CSV Parser
# - Read a selected CSV file generated by TelePath (pseudoanonymised in Excel)
# - Format fields as required for database storage
# - Use SQL.py methods to insert data to database

import db_methods
import csv
import os.path

def selectFile():
  file_path = input("Type the path and filename: ")
  if file_path.upper() == "QUIT":
      return False
  elif os.path.isfile(file_path):
      return file_path
  else:
      print("File not found. Try again or type 'QUIT'.")
      return selectFile()

def processFile(selected_file):
  if selected_file != False:
    with open(selected_file, 'r') as csv_file:
      csv_dict = csv.DictReader(csv_file)
      col_names = csv_dict.fieldnames
      last_sample_id = ""
      for row in csv_dict:
        if row['Lab No/Spec No'] != last_sample_id:
          formatted_receipt = formatDateTime(row["Date Rec'd"], row["Time Rec'd"])
          determined_type = 1
          if row['UMICR'] != "":
            determined_type = 0 
          checkPatient(pt_id=row['Hospital No.'], pt_sex=row['Sex'], pt_dob=row['Age'])
          addSample(samp_id=row['Lab No/Spec No'], rec_date=formatted_receipt, samp_type=determined_type, pt_id=row['Hospital No.'])
          last_sample_id = row['Lab No/Spec No']
        
  else:
    print("ERROR [csv_parser.processFile]: Called method with bad selected_file string.")    

def formatDateTime(dict_date, dict_time):
  fdate = "20" + dict_date[-2:] + "-" + dict_date[3:5] + "-" + dict_date[:2]
  return fdate + " " + dict_time

def checkPatient(pt_id, pt_sex, pt_dob):
  matches = db_methods.selectPatientCount(pt_id)
  if matches == 0:
      db_methods.insertNewPatient(study_id=pt_id, sex=pt_sex, date_of_birth=pt_dob, ethnicity=False)

def addSample(samp_id, rec_date, samp_type, pt_id):
  db_methods.insertNewSample(samp_id, rec_date, samp_type, pt_id)

os.system('cls||clear')
#processFile(r"C:\\Users\\Paul\\Documents\\gitstuff\\ckd-analysis\\example_data.csv")
processFile(r"/home/pjohnson/ckd-analysis/example_data.csv")
#print(formatDateTime("01.02.21", "12:59"))
